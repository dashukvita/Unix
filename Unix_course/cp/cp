#include <stdio.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <unistd.h>
#include <stdlib.h>

/* реализация cp - копирование содержимого файла в другой файл */

const int BUFFER_SIZE = 4096; // буффер на 4 кБ (может быть любой длины, например 1)

void makeCP(int from, int to) {
    char buf[BUFFER_SIZE];
    long nread; // число байт, прочитанных в буффер
    
    while ((nread = read(from, buf, sizeof buf)) > 0) {
        long written;
        if ((written = write(to, buf, nread)) < 1) {
            perror("bed write");
        }
    }
}

void cp(char* fromF, char* toF) {
    int fromFD; // файловый дескриптор файла для чтения
    int toFD; // файловый дескриптор файла для записи
    
    
    // проверка правильно ли открыли файл для чтения
    if ((fromFD = open(fromF, O_RDONLY)) == -1) {
        perror(fromF);
        exit(-1);
    }
    
    // проверка правильно ли открыли файл для записи
    if ((toFD = open(toF, O_WRONLY)) == -1) {
        perror(toF);
        exit(-1);
    }
    
    // проверка совпадения индексных дескрипторов
    struct stat statvFrom;
    struct stat statvTo;
    if (lstat(fromF, &statvFrom)) {
        perror(fromF);
        return;
    }
    if (lstat(toF, &statvTo)) {
        perror(toF);
        return;
    }
    // .st_ino - номер inode
    if (statvFrom.st_ino == statvTo.st_ino) {
        printf("Error: copying into yourself.");
        return;
    }
    
    // если все нормально, копируем
    makeCP(fromFD, toFD);
    
    // закрываем ресурсы
    close(fromFD);
    close(toFD);
    
    printf("File successfully copied.");
}

int main(int args, char** argv) {
    if (args == 3) {
        cp(argv[1], argv[2]);
    } else {
        perror("Illigal number of args.");
    }
}
